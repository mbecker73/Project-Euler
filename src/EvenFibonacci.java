/*
 * Project Euler Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 * 
 */
public class EvenFibonacci {

	public static void main(String[] args) {
		int temp = 0; 
		int sum =0;
		
		//Estimated 50 to be about where Fibonacci sequence hits 4 million
		for (int i=1;i<50;i++){
			  temp=fib(i);
			  if (temp>4000000)
			    break;
			  if (temp%2==0) //only add to sum if even
			    sum+=temp;
		 }
	
    	System.out.println(sum);
	}
	
	//simple recursive function to calculate Nth Fibonacci number
	public static int fib(int number){
        if(number == 1 || number == 2)
            return 1;
        return fib(number-1) + fib(number -2);
    } 
}